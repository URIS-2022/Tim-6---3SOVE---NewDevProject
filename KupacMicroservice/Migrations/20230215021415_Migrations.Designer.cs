// <auto-generated />
using System;
using KupacMicroservice.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KupacMicroservice.Migrations
{
    [DbContext(typeof(KupacDbContext))]
    [Migration("20230215021415_Migrations")]
    partial class Migrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KupacMicroservice.Entities.FizickoLice", b =>
                {
                    b.Property<Guid>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FizickoliceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdresaFizickoLice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KupacId", "FizickoliceId");

                    b.HasIndex("KupacId")
                        .IsUnique();

                    b.ToTable("FizickoLice");

                    b.HasData(
                        new
                        {
                            KupacId = new Guid("16a17928-85a4-43a0-a4f1-a48a0788bdfb"),
                            FizickoliceId = new Guid("8e914117-de7e-41bd-86b4-c529fa278817"),
                            AdresaFizickoLice = "Novi Sad",
                            Ime = "Petar",
                            JMBG = "2906000855002",
                            Prezime = "Petrovic"
                        },
                        new
                        {
                            KupacId = new Guid("4f602e62-fa2f-425d-80c5-56d3fe1fc6d4"),
                            FizickoliceId = new Guid("16fd3722-e965-494f-9de6-fc4046d49f31"),
                            AdresaFizickoLice = "Subotica",
                            Ime = "Marko",
                            JMBG = "1202966156142",
                            Prezime = "Markovic"
                        });
                });

            modelBuilder.Entity("KupacMicroservice.Entities.Kupac", b =>
                {
                    b.Property<Guid>("KupacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdresaKupac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojRacuna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumPocetkaZabrane")
                        .HasColumnType("datetime2");

                    b.Property<int>("DuzinaTrajanjaZabraneGod")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ImaZabranu")
                        .HasColumnType("bit");

                    b.Property<string>("IznosUplata")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OstvarenaPovrsina")
                        .HasColumnType("float");

                    b.Property<string>("Prioritet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KupacId");

                    b.ToTable("Kupac");

                    b.HasData(
                        new
                        {
                            KupacId = new Guid("16a17928-85a4-43a0-a4f1-a48a0788bdfb"),
                            AdresaKupac = "Nis",
                            BrojRacuna = "902 ‑ 11501 ‑ 97",
                            BrojTelefona1 = "0617290600",
                            BrojTelefona2 = "0647089023",
                            DatumPocetkaZabrane = new DateTime(2019, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DuzinaTrajanjaZabraneGod = 2,
                            Email = "skijac@gmail.com",
                            ImaZabranu = false,
                            IznosUplata = "123908",
                            OstvarenaPovrsina = 600.0,
                            Prioritet = "Vlasnik sistema za navodnjavanje"
                        },
                        new
                        {
                            KupacId = new Guid("32c2d78f-adc0-41bf-83f4-b7f4e13da966"),
                            AdresaKupac = "Beocin",
                            BrojRacuna = "908 ‑ 10501 ‑ 97",
                            BrojTelefona1 = "0637240699",
                            BrojTelefona2 = "0617569013",
                            DatumPocetkaZabrane = new DateTime(2018, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DuzinaTrajanjaZabraneGod = 3,
                            Email = "toplana@gmail.com",
                            ImaZabranu = false,
                            IznosUplata = "220000",
                            OstvarenaPovrsina = 700.0,
                            Prioritet = "Vlasnik zemljista koje se granici sa zemljistem koje se daje u zakup"
                        },
                        new
                        {
                            KupacId = new Guid("4f602e62-fa2f-425d-80c5-56d3fe1fc6d4"),
                            AdresaKupac = "Beocin",
                            BrojRacuna = "908 ‑ 10501 ‑ 97",
                            BrojTelefona1 = "0637240699",
                            BrojTelefona2 = "0617569013",
                            DatumPocetkaZabrane = new DateTime(2019, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DuzinaTrajanjaZabraneGod = 3,
                            Email = "biohemija@gmail.com",
                            ImaZabranu = true,
                            IznosUplata = "220000",
                            OstvarenaPovrsina = 700.0,
                            Prioritet = "Vlasnik zemljista koje je najblize zemljistu koje se daje u zakup"
                        },
                        new
                        {
                            KupacId = new Guid("e65bada3-210e-4fad-9d4e-14cb41cc1ae1"),
                            AdresaKupac = "Zrenjanin",
                            BrojRacuna = "903 ‑ 12601 ‑ 97",
                            BrojTelefona1 = "0697230791",
                            BrojTelefona2 = "0617499014",
                            DatumPocetkaZabrane = new DateTime(2017, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DuzinaTrajanjaZabraneGod = 4,
                            Email = "gradskauprava@gmail.com",
                            ImaZabranu = true,
                            IznosUplata = "340000",
                            OstvarenaPovrsina = 1000.0,
                            Prioritet = "Poljoprivrednik koji je upisan u registar"
                        });
                });

            modelBuilder.Entity("KupacMicroservice.Entities.Liciter", b =>
                {
                    b.Property<Guid>("LiciterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdresaLiciter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brojpasosa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drzavastranac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImeLiciter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JmbgLiciter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrezimeLiciter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LiciterId");

                    b.ToTable("Liciter");

                    b.HasData(
                        new
                        {
                            LiciterId = new Guid("b76bc440-2e4f-468d-b5e4-7529767cf9be"),
                            AdresaLiciter = "Mesto",
                            Brojpasosa = "NO0000801",
                            Drzavastranac = "ozankazastranudrzavu",
                            ImeLiciter = "Luka",
                            JmbgLiciter = "0711090293012",
                            PrezimeLiciter = "Lukic"
                        },
                        new
                        {
                            LiciterId = new Guid("895aa525-1762-4981-8d82-8874b0022a49"),
                            AdresaLiciter = "Mesto2",
                            Brojpasosa = "NO000001",
                            Drzavastranac = "ozankazastranudrzavu",
                            ImeLiciter = "Nikola",
                            JmbgLiciter = "1731494293013",
                            PrezimeLiciter = "Nikolic"
                        });
                });

            modelBuilder.Entity("KupacMicroservice.Entities.OvlascenoLice", b =>
                {
                    b.Property<Guid>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LiciterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KupacId", "LiciterId");

                    b.HasIndex("LiciterId");

                    b.ToTable("OvlascenoLice");

                    b.HasData(
                        new
                        {
                            KupacId = new Guid("16a17928-85a4-43a0-a4f1-a48a0788bdfb"),
                            LiciterId = new Guid("b76bc440-2e4f-468d-b5e4-7529767cf9be")
                        },
                        new
                        {
                            KupacId = new Guid("32c2d78f-adc0-41bf-83f4-b7f4e13da966"),
                            LiciterId = new Guid("b76bc440-2e4f-468d-b5e4-7529767cf9be")
                        },
                        new
                        {
                            KupacId = new Guid("32c2d78f-adc0-41bf-83f4-b7f4e13da966"),
                            LiciterId = new Guid("895aa525-1762-4981-8d82-8874b0022a49")
                        });
                });

            modelBuilder.Entity("KupacMicroservice.Entities.PravnoLice", b =>
                {
                    b.Property<Guid>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PravnoliceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdresaPravnoLice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktOsobaIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktOsobaPrezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaticniBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KupacId", "PravnoliceId");

                    b.HasIndex("KupacId")
                        .IsUnique();

                    b.ToTable("PravnoLice");

                    b.HasData(
                        new
                        {
                            KupacId = new Guid("32c2d78f-adc0-41bf-83f4-b7f4e13da966"),
                            PravnoliceId = new Guid("4422d9d6-b4e5-4470-a00f-520dca57118b"),
                            AdresaPravnoLice = "Beograd",
                            Faks = "+1-213-9856512",
                            KontaktOsobaIme = "Dragan",
                            KontaktOsobaPrezime = "Draganovic",
                            MaticniBroj = "12545690",
                            Naziv = "Toplana"
                        },
                        new
                        {
                            KupacId = new Guid("e65bada3-210e-4fad-9d4e-14cb41cc1ae1"),
                            PravnoliceId = new Guid("594b1f58-522c-4314-9072-7553eabb72b6"),
                            AdresaPravnoLice = "Kragujevac",
                            Faks = "+1-208-9946522",
                            KontaktOsobaIme = "Dejan",
                            KontaktOsobaPrezime = "Lukic",
                            MaticniBroj = "56790123",
                            Naziv = "Biohemija"
                        });
                });

            modelBuilder.Entity("KupacMicroservice.Entities.FizickoLice", b =>
                {
                    b.HasOne("KupacMicroservice.Entities.Kupac", null)
                        .WithOne("FizickoLice")
                        .HasForeignKey("KupacMicroservice.Entities.FizickoLice", "KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KupacMicroservice.Entities.OvlascenoLice", b =>
                {
                    b.HasOne("KupacMicroservice.Entities.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KupacMicroservice.Entities.Liciter", "Liciter")
                        .WithMany()
                        .HasForeignKey("LiciterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kupac");

                    b.Navigation("Liciter");
                });

            modelBuilder.Entity("KupacMicroservice.Entities.PravnoLice", b =>
                {
                    b.HasOne("KupacMicroservice.Entities.Kupac", null)
                        .WithOne("PravnoLice")
                        .HasForeignKey("KupacMicroservice.Entities.PravnoLice", "KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KupacMicroservice.Entities.Kupac", b =>
                {
                    b.Navigation("FizickoLice")
                        .IsRequired();

                    b.Navigation("PravnoLice")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
