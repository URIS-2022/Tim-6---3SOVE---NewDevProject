// <auto-generated />
using System;
using DokumentMicroservice.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DokumentMicroservice.Migrations
{
    [DbContext(typeof(DokumentDbContext))]
    [Migration("20230216123052_Migrations")]
    partial class Migrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DokumentMicroservice.Entities.Dokument", b =>
                {
                    b.Property<Guid>("DokumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatumDonosenjaDokumenta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sablon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DokumentId");

                    b.ToTable("Dokument");

                    b.HasData(
                        new
                        {
                            DokumentId = new Guid("9e2474b3-caf5-4123-944d-11b4ab186b6b"),
                            DatumDonosenjaDokumenta = new DateTime(2022, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Sablon = "sablondokument1"
                        },
                        new
                        {
                            DokumentId = new Guid("e4be32f2-da5e-47d5-9fbf-b860eb1d79b3"),
                            DatumDonosenjaDokumenta = new DateTime(2022, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Sablon = "sablondokument1"
                        },
                        new
                        {
                            DokumentId = new Guid("c8e97d45-4bfc-4dca-ba07-20d1e93049d6"),
                            DatumDonosenjaDokumenta = new DateTime(2022, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Sablon = "sablondokument9"
                        },
                        new
                        {
                            DokumentId = new Guid("9a2d9ea6-d264-494a-88f8-51808a1c3196"),
                            DatumDonosenjaDokumenta = new DateTime(2019, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Sablon = "sablondokument3"
                        },
                        new
                        {
                            DokumentId = new Guid("d762b24f-2730-427f-9789-3d840a5f7e39"),
                            DatumDonosenjaDokumenta = new DateTime(2018, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Sablon = "sablondokument4"
                        },
                        new
                        {
                            DokumentId = new Guid("418af1d2-483f-4461-8d82-31b257527a4f"),
                            DatumDonosenjaDokumenta = new DateTime(2013, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Sablon = "sablondokument9"
                        });
                });

            modelBuilder.Entity("DokumentMicroservice.Entities.Oglas", b =>
                {
                    b.Property<Guid>("DokumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OglasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrNadmetanjaJmbg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrNadmetanjaMaticniBrojPreduzeca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DokumentId", "OglasId");

                    b.HasIndex("DokumentId")
                        .IsUnique();

                    b.ToTable("Oglas");

                    b.HasData(
                        new
                        {
                            DokumentId = new Guid("9a2d9ea6-d264-494a-88f8-51808a1c3196"),
                            OglasId = new Guid("011c616c-14db-4bc3-a9c9-c2f642b22f73"),
                            BrNadmetanjaJmbg = "2906000855008",
                            BrNadmetanjaMaticniBrojPreduzeca = "24905678"
                        },
                        new
                        {
                            DokumentId = new Guid("9e2474b3-caf5-4123-944d-11b4ab186b6b"),
                            OglasId = new Guid("9151a095-2890-49c8-a3ac-f5813b92ffac"),
                            BrNadmetanjaJmbg = "2906000855002",
                            BrNadmetanjaMaticniBrojPreduzeca = "23905678"
                        });
                });

            modelBuilder.Entity("DokumentMicroservice.Entities.PredlogPlanaProjekta", b =>
                {
                    b.Property<Guid>("DokumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PredlogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatumPredlog")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZavodniBr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DokumentId", "PredlogId");

                    b.HasIndex("DokumentId")
                        .IsUnique();

                    b.ToTable("PredlogPlanaProjekta");

                    b.HasData(
                        new
                        {
                            DokumentId = new Guid("e4be32f2-da5e-47d5-9fbf-b860eb1d79b3"),
                            PredlogId = new Guid("4ff44338-8d0b-415a-8b44-dfce3d4c311d"),
                            DatumPredlog = new DateTime(2023, 2, 16, 13, 30, 51, 934, DateTimeKind.Local).AddTicks(6551),
                            ZavodniBr = "PSPG-1/2022"
                        },
                        new
                        {
                            DokumentId = new Guid("d762b24f-2730-427f-9789-3d840a5f7e39"),
                            PredlogId = new Guid("b708754f-b5e9-481b-8898-ca3682107e9c"),
                            DatumPredlog = new DateTime(2023, 2, 16, 13, 30, 51, 934, DateTimeKind.Local).AddTicks(6561),
                            ZavodniBr = "PSPG-5/2022"
                        });
                });

            modelBuilder.Entity("DokumentMicroservice.Entities.ResenjeStrucnaKomisija", b =>
                {
                    b.Property<Guid>("DokumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResenjeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatumResenje")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImeClanaKomisije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PredsednikKomisije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrezClanaKomisije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zavodnibr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DokumentId", "ResenjeId");

                    b.HasIndex("DokumentId")
                        .IsUnique();

                    b.ToTable("ResenjeStrucnaKomisije");

                    b.HasData(
                        new
                        {
                            DokumentId = new Guid("c8e97d45-4bfc-4dca-ba07-20d1e93049d6"),
                            ResenjeId = new Guid("22b74319-edb5-4945-b792-76d0b1b81d88"),
                            DatumResenje = new DateTime(2023, 2, 16, 13, 30, 51, 934, DateTimeKind.Local).AddTicks(6601),
                            ImeClanaKomisije = "Marko",
                            PredsednikKomisije = "PredPetarPetrovic",
                            PrezClanaKomisije = "Markovic",
                            Zavodnibr = "PSPG-2/2022"
                        },
                        new
                        {
                            DokumentId = new Guid("418af1d2-483f-4461-8d82-31b257527a4f"),
                            ResenjeId = new Guid("e3eab479-b0aa-4161-bbc9-d2281f43f332"),
                            DatumResenje = new DateTime(2023, 2, 16, 13, 30, 51, 934, DateTimeKind.Local).AddTicks(6611),
                            ImeClanaKomisije = "Luka",
                            PredsednikKomisije = "PredDraganDraganovic",
                            PrezClanaKomisije = "Markovic",
                            Zavodnibr = "PSPG-9/2022"
                        });
                });

            modelBuilder.Entity("DokumentMicroservice.Entities.Oglas", b =>
                {
                    b.HasOne("DokumentMicroservice.Entities.Dokument", null)
                        .WithOne("Oglas")
                        .HasForeignKey("DokumentMicroservice.Entities.Oglas", "DokumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DokumentMicroservice.Entities.PredlogPlanaProjekta", b =>
                {
                    b.HasOne("DokumentMicroservice.Entities.Dokument", null)
                        .WithOne("PredlogPlanaProjekta")
                        .HasForeignKey("DokumentMicroservice.Entities.PredlogPlanaProjekta", "DokumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DokumentMicroservice.Entities.ResenjeStrucnaKomisija", b =>
                {
                    b.HasOne("DokumentMicroservice.Entities.Dokument", null)
                        .WithOne("ResenjeStrucnaKomisija")
                        .HasForeignKey("DokumentMicroservice.Entities.ResenjeStrucnaKomisija", "DokumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DokumentMicroservice.Entities.Dokument", b =>
                {
                    b.Navigation("Oglas")
                        .IsRequired();

                    b.Navigation("PredlogPlanaProjekta")
                        .IsRequired();

                    b.Navigation("ResenjeStrucnaKomisija")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
